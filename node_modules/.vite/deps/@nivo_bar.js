import {
  $r,
  Bt,
  Di,
  Dt,
  Et,
  H,
  Ht,
  Ii,
  Jt,
  Oi,
  Pi,
  Ui,
  Vi,
  We,
  X,
  Xi,
  Zr,
  ai,
  animated,
  band,
  di,
  diverging_default,
  format,
  k,
  linear,
  log,
  oi,
  pi,
  point,
  pr,
  require_Set,
  require_SetCache,
  require_Stack,
  require_Symbol,
  require_arrayFilter,
  require_arrayIncludes,
  require_arrayIncludesWith,
  require_arrayMap,
  require_arrayPush,
  require_assignValue,
  require_baseFlatten,
  require_baseFor,
  require_baseGet,
  require_baseGetAllKeys,
  require_baseGetTag,
  require_baseIsEqual,
  require_baseRest,
  require_baseUnary,
  require_cacheHas,
  require_castPath,
  require_cloneArrayBuffer,
  require_cloneBuffer,
  require_cloneTypedArray,
  require_copyArray,
  require_copyObject,
  require_flatRest,
  require_get,
  require_getAllKeys,
  require_getPrototype,
  require_getSymbols,
  require_getTag,
  require_hasIn,
  require_identity,
  require_initCloneObject,
  require_isArray,
  require_isArrayLike,
  require_isBuffer,
  require_isIterateeCall,
  require_isKey,
  require_isObject,
  require_isObjectLike,
  require_isPlainObject,
  require_isSymbol,
  require_keys,
  require_keysIn,
  require_last,
  require_nodeUtil,
  require_prop_types,
  require_setToArray,
  require_stubArray,
  require_toKey,
  si,
  stack_default,
  symlog,
  time,
  timeFormat,
  timeParse,
  to,
  useSpring,
  useTransition,
  utcParse,
  utcTime,
  w
} from "./chunk-TBNM4BYT.js";
import {
  require_jsx_runtime
} from "./chunk-XUXHEDPB.js";
import "./chunk-XBHG3ID7.js";
import {
  require_react
} from "./chunk-YSDLPTTY.js";
import {
  __commonJS,
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/lodash/noop.js
var require_noop = __commonJS({
  "node_modules/lodash/noop.js"(exports, module) {
    function noop() {
    }
    module.exports = noop;
  }
});

// node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "node_modules/lodash/_createSet.js"(exports, module) {
    var Set = require_Set();
    var noop = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set(values);
    };
    module.exports = createSet;
  }
});

// node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "node_modules/lodash/_baseUniq.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// node_modules/lodash/uniq.js
var require_uniq = __commonJS({
  "node_modules/lodash/uniq.js"(exports, module) {
    var baseUniq = require_baseUniq();
    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }
    module.exports = uniq;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/uniqBy.js
var require_uniqBy = __commonJS({
  "node_modules/lodash/uniqBy.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var baseUniq = require_baseUniq();
    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }
    module.exports = uniqBy;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/_baseSortBy.js
var require_baseSortBy = __commonJS({
  "node_modules/lodash/_baseSortBy.js"(exports, module) {
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    module.exports = baseSortBy;
  }
});

// node_modules/lodash/_compareAscending.js
var require_compareAscending = __commonJS({
  "node_modules/lodash/_compareAscending.js"(exports, module) {
    var isSymbol = require_isSymbol();
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }
    module.exports = compareAscending;
  }
});

// node_modules/lodash/_compareMultiple.js
var require_compareMultiple = __commonJS({
  "node_modules/lodash/_compareMultiple.js"(exports, module) {
    var compareAscending = require_compareAscending();
    function compareMultiple(object, other, orders) {
      var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == "desc" ? -1 : 1);
        }
      }
      return object.index - other.index;
    }
    module.exports = compareMultiple;
  }
});

// node_modules/lodash/_baseOrderBy.js
var require_baseOrderBy = __commonJS({
  "node_modules/lodash/_baseOrderBy.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseGet = require_baseGet();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var baseSortBy = require_baseSortBy();
    var baseUnary = require_baseUnary();
    var compareMultiple = require_compareMultiple();
    var identity = require_identity();
    var isArray = require_isArray();
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            };
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }
      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
      var result = baseMap(collection, function(value, key, collection2) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { "criteria": criteria, "index": ++index, "value": value };
      });
      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    module.exports = baseOrderBy;
  }
});

// node_modules/lodash/sortBy.js
var require_sortBy = __commonJS({
  "node_modules/lodash/sortBy.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var baseOrderBy = require_baseOrderBy();
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    module.exports = sortBy;
  }
});

// node_modules/lodash/_baseIsDate.js
var require_baseIsDate = __commonJS({
  "node_modules/lodash/_baseIsDate.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var dateTag = "[object Date]";
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }
    module.exports = baseIsDate;
  }
});

// node_modules/lodash/isDate.js
var require_isDate = __commonJS({
  "node_modules/lodash/isDate.js"(exports, module) {
    var baseIsDate = require_baseIsDate();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsDate = nodeUtil && nodeUtil.isDate;
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
    module.exports = isDate;
  }
});

// node_modules/lodash/_baseFilter.js
var require_baseFilter = __commonJS({
  "node_modules/lodash/_baseFilter.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection2) {
        if (predicate(value, index, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  }
});

// node_modules/lodash/filter.js
var require_filter = __commonJS({
  "node_modules/lodash/filter.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter;
  }
});

// node_modules/lodash/isNumber.js
var require_isNumber = __commonJS({
  "node_modules/lodash/isNumber.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol = require_Symbol();
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_parent.js
var require_parent = __commonJS({
  "node_modules/lodash/_parent.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }
    module.exports = parent;
  }
});

// node_modules/lodash/_baseUnset.js
var require_baseUnset = __commonJS({
  "node_modules/lodash/_baseUnset.js"(exports, module) {
    var castPath = require_castPath();
    var last = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }
    module.exports = baseUnset;
  }
});

// node_modules/lodash/_customOmitClone.js
var require_customOmitClone = __commonJS({
  "node_modules/lodash/_customOmitClone.js"(exports, module) {
    var isPlainObject = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  }
});

// node_modules/lodash/omit.js
var require_omit = __commonJS({
  "node_modules/lodash/omit.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit;
  }
});

// node_modules/@nivo/axes/dist/nivo-axes.es.js
var t2 = __toESM(require_react());
var import_react = __toESM(require_react());

// node_modules/@nivo/scales/dist/nivo-scales.es.js
var import_uniq = __toESM(require_uniq());
var import_uniqBy = __toESM(require_uniqBy());
var import_sortBy = __toESM(require_sortBy());
var import_last = __toESM(require_last());
var import_isDate = __toESM(require_isDate());

// node_modules/@nivo/scales/node_modules/d3-time/src/interval.js
var t0 = /* @__PURE__ */ new Date();
var t1 = /* @__PURE__ */ new Date();
function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date)), date;
  }
  interval.floor = function(date) {
    return floori(date = /* @__PURE__ */ new Date(+date)), date;
  };
  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };
  interval.round = function(date) {
    var d0 = interval(date), d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };
  interval.offset = function(date, step) {
    return offseti(date = /* @__PURE__ */ new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };
  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0))
      return range;
    do
      range.push(previous = /* @__PURE__ */ new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };
  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date)
        while (floori(date), !test(date))
          date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date, -1), !test(date)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date, 1), !test(date)) {
            }
          }
      }
    });
  };
  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };
    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d2) {
        return field(d2) % step === 0;
      } : function(d2) {
        return interval.count(0, d2) % step === 0;
      });
    };
  }
  return interval;
}

// node_modules/@nivo/scales/node_modules/d3-time/src/millisecond.js
var millisecond = newInterval(function() {
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});
millisecond.every = function(k4) {
  k4 = Math.floor(k4);
  if (!isFinite(k4) || !(k4 > 0))
    return null;
  if (!(k4 > 1))
    return millisecond;
  return newInterval(function(date) {
    date.setTime(Math.floor(date / k4) * k4);
  }, function(date, step) {
    date.setTime(+date + step * k4);
  }, function(start, end) {
    return (end - start) / k4;
  });
};
var millisecond_default = millisecond;
var milliseconds = millisecond.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/duration.js
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;

// node_modules/@nivo/scales/node_modules/d3-time/src/second.js
var second = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond);
}, function(start, end) {
  return (end - start) / durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});
var second_default = second;
var seconds = second.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/minute.js
var minute = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getMinutes();
});
var minute_default = minute;
var minutes = minute.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/hour.js
var hour = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getHours();
});
var hour_default = hour;
var hours = hour.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/day.js
var day = newInterval(function(date) {
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setDate(date.getDate() + step);
}, function(start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
}, function(date) {
  return date.getDate() - 1;
});
var days = day.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/week.js
function weekday(i3) {
  return newInterval(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i3) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/month.js
var month = newInterval(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});
var month_default = month;
var months = month.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/year.js
var year = newInterval(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});
year.every = function(k4) {
  return !isFinite(k4 = Math.floor(k4)) || !(k4 > 0) ? null : newInterval(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k4) * k4);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k4);
  });
};
var year_default = year;
var years = year.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcMinute.js
var utcMinute = newInterval(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});
var utcMinute_default = utcMinute;
var utcMinutes = utcMinute.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcHour.js
var utcHour = newInterval(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getUTCHours();
});
var utcHour_default = utcHour;
var utcHours = utcHour.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcDay.js
var utcDay = newInterval(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});
var utcDays = utcDay.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcWeek.js
function utcWeekday(i3) {
  return newInterval(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i3) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcMonth.js
var utcMonth = newInterval(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});
var utcMonth_default = utcMonth;
var utcMonths = utcMonth.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcYear.js
var utcYear = newInterval(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});
utcYear.every = function(k4) {
  return !isFinite(k4 = Math.floor(k4)) || !(k4 > 0) ? null : newInterval(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k4) * k4);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k4);
  });
};
var utcYear_default = utcYear;
var utcYears = utcYear.range;

// node_modules/@nivo/scales/dist/nivo-scales.es.js
var J = [function(n4) {
  return n4.setMilliseconds(0);
}, function(n4) {
  return n4.setSeconds(0);
}, function(n4) {
  return n4.setMinutes(0);
}, function(n4) {
  return n4.setHours(0);
}, function(n4) {
  return n4.setDate(1);
}, function(n4) {
  return n4.setMonth(0);
}];
var K = { millisecond: [], second: J.slice(0, 1), minute: J.slice(0, 2), hour: J.slice(0, 3), day: J.slice(0, 4), month: J.slice(0, 5), year: J.slice(0, 6) };
var L = function(n4) {
  return function(t4) {
    return K[n4].forEach(function(n5) {
      n5(t4);
    }), t4;
  };
};
var Q = function(n4) {
  var t4 = n4.format, r3 = void 0 === t4 ? "native" : t4, e5 = n4.precision, a3 = void 0 === e5 ? "millisecond" : e5, u2 = n4.useUTC, c2 = void 0 === u2 || u2, s = L(a3);
  return function(n5) {
    if (void 0 === n5)
      return n5;
    if ("native" === r3 || n5 instanceof Date)
      return s(n5);
    var t5 = c2 ? utcParse(r3) : timeParse(r3);
    return s(t5(n5));
  };
};
var W = function(n4, t4, r3, e5) {
  var a3, i3, o2, c2, s = n4.min, d2 = void 0 === s ? 0 : s, f = n4.max, l = void 0 === f ? "auto" : f, m2 = n4.stacked, v3 = void 0 !== m2 && m2, y = n4.reverse, p3 = void 0 !== y && y, h2 = n4.clamp, g3 = void 0 !== h2 && h2, x2 = n4.nice, k4 = void 0 !== x2 && x2;
  "auto" === d2 ? a3 = true === v3 ? null != (i3 = t4.minStacked) ? i3 : 0 : t4.min : a3 = d2;
  "auto" === l ? o2 = true === v3 ? null != (c2 = t4.maxStacked) ? c2 : 0 : t4.max : o2 = l;
  var T4 = linear().rangeRound("x" === e5 ? [0, r3] : [r3, 0]).domain(p3 ? [o2, a3] : [a3, o2]).clamp(g3);
  return true === k4 ? T4.nice() : "number" == typeof k4 && T4.nice(k4), X2(T4, v3);
};
var X2 = function(n4, t4) {
  void 0 === t4 && (t4 = false);
  var r3 = n4;
  return r3.type = "linear", r3.stacked = t4, r3;
};
var Y = function(n4, t4, r3) {
  var e5 = point().range([0, r3]).domain(t4.all);
  return e5.type = "point", e5;
};
var _ = function(n4, t4, r3, e5) {
  var a3 = n4.round, i3 = void 0 === a3 || a3, o2 = band().range("x" === e5 ? [0, r3] : [r3, 0]).domain(t4.all).round(i3);
  return nn(o2);
};
var nn = function(n4) {
  var t4 = n4;
  return t4.type = "band", t4;
};
var tn = function(n4, t4, r3) {
  var e5, a3, i3 = n4.format, o2 = void 0 === i3 ? "native" : i3, u2 = n4.precision, c2 = void 0 === u2 ? "millisecond" : u2, s = n4.min, l = void 0 === s ? "auto" : s, m2 = n4.max, v3 = void 0 === m2 ? "auto" : m2, y = n4.useUTC, p3 = void 0 === y || y, h2 = n4.nice, g3 = void 0 !== h2 && h2, x2 = Q({ format: o2, precision: c2, useUTC: p3 });
  e5 = "auto" === l ? x2(t4.min) : "native" !== o2 ? x2(l) : l, a3 = "auto" === v3 ? x2(t4.max) : "native" !== o2 ? x2(v3) : v3;
  var k4 = p3 ? utcTime() : time();
  k4.range([0, r3]), e5 && a3 && k4.domain([e5, a3]), true === g3 ? k4.nice() : "object" != typeof g3 && "number" != typeof g3 || k4.nice(g3);
  var T4 = k4;
  return T4.type = "time", T4.useUTC = p3, T4;
};
var rn = function(n4, t4, r3, e5) {
  var a3, i3 = n4.base, o2 = void 0 === i3 ? 10 : i3, u2 = n4.min, c2 = void 0 === u2 ? "auto" : u2, s = n4.max, d2 = void 0 === s ? "auto" : s;
  if (t4.all.some(function(n5) {
    return 0 === n5;
  }))
    throw new Error("a log scale domain must not include or cross zero");
  var f, m2, v3 = false;
  if (t4.all.filter(function(n5) {
    return null != n5;
  }).forEach(function(n5) {
    v3 || (void 0 === a3 ? a3 = Math.sign(n5) : Math.sign(n5) !== a3 && (v3 = true));
  }), v3)
    throw new Error("a log scale domain must be strictly-positive or strictly-negative");
  f = "auto" === c2 ? t4.min : c2, m2 = "auto" === d2 ? t4.max : d2;
  var y = log().domain([f, m2]).rangeRound("x" === e5 ? [0, r3] : [r3, 0]).base(o2).nice();
  return y.type = "log", y;
};
var en = function(n4, t4, r3, e5) {
  var a3, i3, o2 = n4.constant, u2 = void 0 === o2 ? 1 : o2, c2 = n4.min, s = void 0 === c2 ? "auto" : c2, d2 = n4.max, f = void 0 === d2 ? "auto" : d2, l = n4.reverse, v3 = void 0 !== l && l;
  a3 = "auto" === s ? t4.min : s, i3 = "auto" === f ? t4.max : f;
  var y = symlog().constant(u2).rangeRound("x" === e5 ? [0, r3] : [r3, 0]).nice();
  true === v3 ? y.domain([i3, a3]) : y.domain([a3, i3]);
  var p3 = y;
  return p3.type = "symlog", p3;
};
function cn(n4, t4, r3, e5) {
  switch (n4.type) {
    case "linear":
      return W(n4, t4, r3, e5);
    case "point":
      return Y(n4, t4, r3);
    case "band":
      return _(n4, t4, r3, e5);
    case "time":
      return tn(n4, t4, r3);
    case "log":
      return rn(n4, t4, r3, e5);
    case "symlog":
      return en(n4, t4, r3, e5);
    default:
      throw new Error("invalid scale spec");
  }
}
var pn = function(n4) {
  var t4 = n4.bandwidth();
  if (0 === t4)
    return n4;
  var r3 = t4 / 2;
  return n4.round() && (r3 = Math.round(r3)), function(t5) {
    var e5;
    return (null != (e5 = n4(t5)) ? e5 : 0) + r3;
  };
};
var hn = { millisecond: [millisecond_default, millisecond_default], second: [second_default, second_default], minute: [minute_default, utcMinute_default], hour: [hour_default, utcHour_default], day: [newInterval(function(n4) {
  return n4.setHours(0, 0, 0, 0);
}, function(n4, t4) {
  return n4.setDate(n4.getDate() + t4);
}, function(n4, t4) {
  return (t4.getTime() - n4.getTime()) / 864e5;
}, function(n4) {
  return Math.floor(n4.getTime() / 864e5);
}), newInterval(function(n4) {
  return n4.setUTCHours(0, 0, 0, 0);
}, function(n4, t4) {
  return n4.setUTCDate(n4.getUTCDate() + t4);
}, function(n4, t4) {
  return (t4.getTime() - n4.getTime()) / 864e5;
}, function(n4) {
  return Math.floor(n4.getTime() / 864e5);
})], week: [sunday, utcSunday], sunday: [sunday, utcSunday], monday: [monday, utcMonday], tuesday: [tuesday, utcTuesday], wednesday: [wednesday, utcWednesday], thursday: [thursday, utcThursday], friday: [friday, utcFriday], saturday: [saturday, utcSaturday], month: [month_default, utcMonth_default], year: [year_default, utcYear_default] };
var gn = Object.keys(hn);
var xn = new RegExp("^every\\s*(\\d+)?\\s*(" + gn.join("|") + ")s?$", "i");
var kn = function(n4, t4) {
  if (Array.isArray(t4))
    return t4;
  if ("string" == typeof t4 && "useUTC" in n4) {
    var r3 = t4.match(xn);
    if (r3) {
      var e5 = r3[1], a3 = r3[2], i3 = hn[a3][n4.useUTC ? 1 : 0];
      if ("day" === a3) {
        var o2, u2, c2 = n4.domain(), s = c2[0], d2 = c2[1], f = new Date(d2);
        return f.setDate(f.getDate() + 1), null != (o2 = null == (u2 = i3.every(Number(null != e5 ? e5 : 1))) ? void 0 : u2.range(s, f)) ? o2 : [];
      }
      if (void 0 === e5)
        return n4.ticks(i3);
      var l = i3.every(Number(e5));
      if (l)
        return n4.ticks(l);
    }
    throw new Error("Invalid tickValues: " + t4);
  }
  if ("ticks" in n4) {
    if (void 0 === t4)
      return n4.ticks();
    if ("number" == typeof (m2 = t4) && isFinite(m2) && Math.floor(m2) === m2)
      return n4.ticks(t4);
  }
  var m2;
  return n4.domain();
};

// node_modules/@nivo/axes/dist/nivo-axes.es.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_prop_types = __toESM(require_prop_types());
function p() {
  return p = Object.assign ? Object.assign.bind() : function(t4) {
    for (var e5 = 1; e5 < arguments.length; e5++) {
      var i3 = arguments[e5];
      for (var n4 in i3)
        Object.prototype.hasOwnProperty.call(i3, n4) && (t4[n4] = i3[n4]);
    }
    return t4;
  }, p.apply(this, arguments);
}
var b = function(t4) {
  var e5, i3 = t4.axis, n4 = t4.scale, r3 = t4.ticksPosition, a3 = t4.tickValues, l = t4.tickSize, s = t4.tickPadding, c2 = t4.tickRotation, f = t4.truncateTickAt, u2 = t4.engine, d2 = void 0 === u2 ? "svg" : u2, x2 = kn(n4, a3), h2 = pi[d2], g3 = "bandwidth" in n4 ? pn(n4) : n4, k4 = { lineX: 0, lineY: 0 }, v3 = { textX: 0, textY: 0 }, b3 = "object" == typeof document && "rtl" === document.dir, T4 = h2.align.center, P3 = h2.baseline.center;
  "x" === i3 ? (e5 = function(t5) {
    var e6;
    return { x: null != (e6 = g3(t5)) ? e6 : 0, y: 0 };
  }, k4.lineY = l * ("after" === r3 ? 1 : -1), v3.textY = (l + s) * ("after" === r3 ? 1 : -1), P3 = "after" === r3 ? h2.baseline.top : h2.baseline.bottom, 0 === c2 ? T4 = h2.align.center : "after" === r3 && c2 < 0 || "before" === r3 && c2 > 0 ? (T4 = h2.align[b3 ? "left" : "right"], P3 = h2.baseline.center) : ("after" === r3 && c2 > 0 || "before" === r3 && c2 < 0) && (T4 = h2.align[b3 ? "right" : "left"], P3 = h2.baseline.center)) : (e5 = function(t5) {
    var e6;
    return { x: 0, y: null != (e6 = g3(t5)) ? e6 : 0 };
  }, k4.lineX = l * ("after" === r3 ? 1 : -1), v3.textX = (l + s) * ("after" === r3 ? 1 : -1), T4 = "after" === r3 ? h2.align.left : h2.align.right);
  return { ticks: x2.map(function(t5) {
    var i4 = "string" == typeof t5 ? function(t6) {
      var e6 = String(t6).length;
      return f && f > 0 && e6 > f ? "" + String(t6).slice(0, f).concat("...") : "" + t6;
    }(t5) : t5;
    return p({ key: t5 instanceof Date ? "" + t5.valueOf() : "" + t5, value: i4 }, e5(t5), k4, v3);
  }), textAlign: T4, textBaseline: P3 };
};
var T = function(t4, e5) {
  if (void 0 === t4 || "function" == typeof t4)
    return t4;
  if ("time" === e5.type) {
    var i3 = timeFormat(t4);
    return function(t5) {
      return i3(t5 instanceof Date ? t5 : new Date(t5));
    };
  }
  return format(t4);
};
var P = function(t4) {
  var e5, i3 = t4.width, n4 = t4.height, r3 = t4.scale, o2 = t4.axis, a3 = t4.values, l = (e5 = a3, Array.isArray(e5) ? a3 : void 0) || kn(r3, a3), s = "bandwidth" in r3 ? pn(r3) : r3, c2 = "x" === o2 ? l.map(function(t5) {
    var e6, i4;
    return { key: t5 instanceof Date ? "" + t5.valueOf() : "" + t5, x1: null != (e6 = s(t5)) ? e6 : 0, x2: null != (i4 = s(t5)) ? i4 : 0, y1: 0, y2: n4 };
  }) : l.map(function(t5) {
    var e6, n5;
    return { key: t5 instanceof Date ? "" + t5.valueOf() : "" + t5, x1: 0, x2: i3, y1: null != (e6 = s(t5)) ? e6 : 0, y2: null != (n5 = s(t5)) ? n5 : 0 };
  });
  return c2;
};
var S = (0, import_react.memo)(function(t4) {
  var e5, n4 = t4.value, r3 = t4.format, o2 = t4.lineX, l = t4.lineY, s = t4.onClick, f = t4.textBaseline, u2 = t4.textAnchor, d2 = t4.animatedProps, x2 = Et(), m2 = x2.axis.ticks.line, y = x2.axis.ticks.text, k4 = null != (e5 = null == r3 ? void 0 : r3(n4)) ? e5 : n4, v3 = (0, import_react.useMemo)(function() {
    var t5 = { opacity: d2.opacity };
    return s ? { style: p({}, t5, { cursor: "pointer" }), onClick: function(t6) {
      return s(t6, k4);
    } } : { style: t5 };
  }, [d2.opacity, s, k4]);
  return (0, import_jsx_runtime.jsxs)(animated.g, p({ transform: d2.transform }, v3, { children: [(0, import_jsx_runtime.jsx)("line", { x1: 0, x2: o2, y1: 0, y2: l, style: m2 }), y.outlineWidth > 0 && (0, import_jsx_runtime.jsx)(animated.text, { dominantBaseline: f, textAnchor: u2, transform: d2.textTransform, style: y, strokeWidth: 2 * y.outlineWidth, stroke: y.outlineColor, strokeLinejoin: "round", children: "" + k4 }), (0, import_jsx_runtime.jsx)(animated.text, { dominantBaseline: f, textAnchor: u2, transform: d2.textTransform, style: y, children: "" + k4 })] }));
});
var A = function(e5) {
  var r3 = e5.axis, o2 = e5.scale, s = e5.x, d2 = void 0 === s ? 0 : s, x2 = e5.y, m2 = void 0 === x2 ? 0 : x2, y = e5.length, v3 = e5.ticksPosition, P3 = e5.tickValues, A2 = e5.tickSize, W5 = void 0 === A2 ? 5 : A2, O3 = e5.tickPadding, w4 = void 0 === O3 ? 5 : O3, B3 = e5.tickRotation, X4 = void 0 === B3 ? 0 : B3, Y3 = e5.format, C3 = e5.renderTick, z4 = void 0 === C3 ? S : C3, V3 = e5.truncateTickAt, j3 = e5.legend, D3 = e5.legendPosition, R3 = void 0 === D3 ? "end" : D3, E2 = e5.legendOffset, L3 = void 0 === E2 ? 0 : E2, q3 = e5.onClick, F = e5.ariaHidden, H3 = Et(), N2 = H3.axis.legend.text, I3 = (0, import_react.useMemo)(function() {
    return T(Y3, o2);
  }, [Y3, o2]), J4 = b({ axis: r3, scale: o2, ticksPosition: v3, tickValues: P3, tickSize: W5, tickPadding: w4, tickRotation: X4, truncateTickAt: V3 }), G = J4.ticks, K3 = J4.textAlign, M3 = J4.textBaseline, Q3 = null;
  if (void 0 !== j3) {
    var U2, Z2 = 0, $2 = 0, _3 = 0;
    "y" === r3 ? (_3 = -90, Z2 = L3, "start" === R3 ? (U2 = "start", $2 = y) : "middle" === R3 ? (U2 = "middle", $2 = y / 2) : "end" === R3 && (U2 = "end")) : ($2 = L3, "start" === R3 ? U2 = "start" : "middle" === R3 ? (U2 = "middle", Z2 = y / 2) : "end" === R3 && (U2 = "end", Z2 = y)), Q3 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [N2.outlineWidth > 0 && (0, import_jsx_runtime.jsx)("text", { transform: "translate(" + Z2 + ", " + $2 + ") rotate(" + _3 + ")", textAnchor: U2, style: p({ dominantBaseline: "central" }, N2), strokeWidth: 2 * N2.outlineWidth, stroke: N2.outlineColor, strokeLinejoin: "round", children: j3 }), (0, import_jsx_runtime.jsx)("text", { transform: "translate(" + Z2 + ", " + $2 + ") rotate(" + _3 + ")", textAnchor: U2, style: p({ dominantBaseline: "central" }, N2), children: j3 })] });
  }
  var tt = Zr(), et = tt.animate, it = tt.config, nt = useSpring({ transform: "translate(" + d2 + "," + m2 + ")", lineX2: "x" === r3 ? y : 0, lineY2: "x" === r3 ? 0 : y, config: it, immediate: !et }), rt = (0, import_react.useCallback)(function(t4) {
    return { opacity: 1, transform: "translate(" + t4.x + "," + t4.y + ")", textTransform: "translate(" + t4.textX + "," + t4.textY + ") rotate(" + X4 + ")" };
  }, [X4]), ot = (0, import_react.useCallback)(function(t4) {
    return { opacity: 0, transform: "translate(" + t4.x + "," + t4.y + ")", textTransform: "translate(" + t4.textX + "," + t4.textY + ") rotate(" + X4 + ")" };
  }, [X4]), at = useTransition(G, { keys: function(t4) {
    return t4.key;
  }, initial: rt, from: ot, enter: rt, update: rt, leave: { opacity: 0 }, config: it, immediate: !et });
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: nt.transform, "aria-hidden": F, children: [at(function(e6, i3, n4, r4) {
    return t2.createElement(z4, p({ tickIndex: r4, format: I3, rotate: X4, textBaseline: M3, textAnchor: K3, truncateTickAt: V3, animatedProps: e6 }, i3, q3 ? { onClick: q3 } : {}));
  }), (0, import_jsx_runtime.jsx)(animated.line, { style: H3.axis.domain.line, x1: 0, x2: nt.lineX2, y1: 0, y2: nt.lineY2 }), Q3] });
};
var W2 = (0, import_react.memo)(A);
var O = { ticksPosition: import_prop_types.default.oneOf(["before", "after"]), tickValues: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string, import_prop_types.default.instanceOf(Date)])), import_prop_types.default.string]), rotateOnTickLength: import_prop_types.default.shape({ angle: import_prop_types.default.number, length: import_prop_types.default.number }), tickSize: import_prop_types.default.number, tickPadding: import_prop_types.default.number, tickRotation: import_prop_types.default.number, format: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.string]), renderTick: import_prop_types.default.func, legend: import_prop_types.default.node, legendPosition: import_prop_types.default.oneOf(["start", "middle", "end"]), legendOffset: import_prop_types.default.number, ariaHidden: import_prop_types.default.bool };
var w2 = import_prop_types.default.shape(O);
var B = ["top", "right", "bottom", "left"];
var X3 = (0, import_react.memo)(function(t4) {
  var e5 = t4.xScale, i3 = t4.yScale, n4 = t4.width, r3 = t4.height, o2 = { top: t4.top, right: t4.right, bottom: t4.bottom, left: t4.left };
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: B.map(function(t5) {
    var a3 = o2[t5];
    if (!a3)
      return null;
    var l = "top" === t5 || "bottom" === t5;
    return (0, import_jsx_runtime.jsx)(W2, p({}, a3, { axis: l ? "x" : "y", x: "right" === t5 ? n4 : 0, y: "bottom" === t5 ? r3 : 0, scale: l ? e5 : i3, length: l ? n4 : r3, ticksPosition: "top" === t5 || "left" === t5 ? "before" : "after", truncateTickAt: a3.truncateTickAt }), t5);
  }) });
});
var Y2 = (0, import_react.memo)(function(t4) {
  var e5 = t4.animatedProps, i3 = Et();
  return (0, import_jsx_runtime.jsx)(animated.line, p({}, e5, i3.grid.line));
});
var C = (0, import_react.memo)(function(t4) {
  var e5 = t4.lines, i3 = Zr(), n4 = i3.animate, o2 = i3.config, a3 = useTransition(e5, { keys: function(t5) {
    return t5.key;
  }, initial: function(t5) {
    return { opacity: 1, x1: t5.x1, x2: t5.x2, y1: t5.y1, y2: t5.y2 };
  }, from: function(t5) {
    return { opacity: 0, x1: t5.x1, x2: t5.x2, y1: t5.y1, y2: t5.y2 };
  }, enter: function(t5) {
    return { opacity: 1, x1: t5.x1, x2: t5.x2, y1: t5.y1, y2: t5.y2 };
  }, update: function(t5) {
    return { opacity: 1, x1: t5.x1, x2: t5.x2, y1: t5.y1, y2: t5.y2 };
  }, leave: { opacity: 0 }, config: o2, immediate: !n4 });
  return (0, import_jsx_runtime.jsx)("g", { children: a3(function(t5, e6) {
    return (0, import_react.createElement)(Y2, p({}, e6, { key: e6.key, animatedProps: t5 }));
  }) });
});
var z = (0, import_react.memo)(function(t4) {
  var e5 = t4.width, n4 = t4.height, r3 = t4.xScale, o2 = t4.yScale, a3 = t4.xValues, l = t4.yValues, s = (0, import_react.useMemo)(function() {
    return !!r3 && P({ width: e5, height: n4, scale: r3, axis: "x", values: a3 });
  }, [r3, a3, e5, n4]), c2 = (0, import_react.useMemo)(function() {
    return !!o2 && P({ width: e5, height: n4, scale: o2, axis: "y", values: l });
  }, [n4, e5, o2, l]);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [s && (0, import_jsx_runtime.jsx)(C, { lines: s }), c2 && (0, import_jsx_runtime.jsx)(C, { lines: c2 })] });
});
var V = function(t4, e5) {
  var i3, n4 = e5.axis, r3 = e5.scale, o2 = e5.x, a3 = void 0 === o2 ? 0 : o2, l = e5.y, c2 = void 0 === l ? 0 : l, f = e5.length, u2 = e5.ticksPosition, d2 = e5.tickValues, x2 = e5.tickSize, m2 = void 0 === x2 ? 5 : x2, y = e5.tickPadding, h2 = void 0 === y ? 5 : y, g3 = e5.tickRotation, k4 = void 0 === g3 ? 0 : g3, v3 = e5.format, p3 = e5.legend, T4 = e5.legendPosition, P3 = void 0 === T4 ? "end" : T4, S3 = e5.legendOffset, A2 = void 0 === S3 ? 0 : S3, W5 = e5.theme, O3 = b({ axis: n4, scale: r3, ticksPosition: u2, tickValues: d2, tickSize: m2, tickPadding: h2, tickRotation: k4, engine: "canvas" }), w4 = O3.ticks, B3 = O3.textAlign, X4 = O3.textBaseline;
  t4.save(), t4.translate(a3, c2), t4.textAlign = B3, t4.textBaseline = X4;
  var Y3 = W5.axis.ticks.text;
  t4.font = (Y3.fontWeight ? Y3.fontWeight + " " : "") + Y3.fontSize + "px " + Y3.fontFamily, (null != (i3 = W5.axis.domain.line.strokeWidth) ? i3 : 0) > 0 && (t4.lineWidth = Number(W5.axis.domain.line.strokeWidth), t4.lineCap = "square", W5.axis.domain.line.stroke && (t4.strokeStyle = W5.axis.domain.line.stroke), t4.beginPath(), t4.moveTo(0, 0), t4.lineTo("x" === n4 ? f : 0, "x" === n4 ? 0 : f), t4.stroke());
  var C3 = "function" == typeof v3 ? v3 : function(t5) {
    return "" + t5;
  };
  if (w4.forEach(function(e6) {
    var i4;
    (null != (i4 = W5.axis.ticks.line.strokeWidth) ? i4 : 0) > 0 && (t4.lineWidth = Number(W5.axis.ticks.line.strokeWidth), t4.lineCap = "square", W5.axis.ticks.line.stroke && (t4.strokeStyle = W5.axis.ticks.line.stroke), t4.beginPath(), t4.moveTo(e6.x, e6.y), t4.lineTo(e6.x + e6.lineX, e6.y + e6.lineY), t4.stroke());
    var n5 = C3(e6.value);
    t4.save(), t4.translate(e6.x + e6.textX, e6.y + e6.textY), t4.rotate(oi(k4)), Y3.outlineWidth > 0 && (t4.strokeStyle = Y3.outlineColor, t4.lineWidth = 2 * Y3.outlineWidth, t4.lineJoin = "round", t4.strokeText("" + n5, 0, 0)), W5.axis.ticks.text.fill && (t4.fillStyle = Y3.fill), t4.fillText("" + n5, 0, 0), t4.restore();
  }), void 0 !== p3) {
    var z4 = 0, V3 = 0, j3 = 0, D3 = "center";
    "y" === n4 ? (j3 = -90, z4 = A2, "start" === P3 ? (D3 = "start", V3 = f) : "middle" === P3 ? (D3 = "center", V3 = f / 2) : "end" === P3 && (D3 = "end")) : (V3 = A2, "start" === P3 ? D3 = "start" : "middle" === P3 ? (D3 = "center", z4 = f / 2) : "end" === P3 && (D3 = "end", z4 = f)), t4.translate(z4, V3), t4.rotate(oi(j3)), t4.font = (W5.axis.legend.text.fontWeight ? W5.axis.legend.text.fontWeight + " " : "") + W5.axis.legend.text.fontSize + "px " + W5.axis.legend.text.fontFamily, W5.axis.legend.text.fill && (t4.fillStyle = W5.axis.legend.text.fill), t4.textAlign = D3, t4.textBaseline = "middle", t4.fillText(p3, 0, 0);
  }
  t4.restore();
};
var j = function(t4, e5) {
  var i3 = e5.xScale, n4 = e5.yScale, r3 = e5.width, o2 = e5.height, a3 = e5.top, l = e5.right, s = e5.bottom, c2 = e5.left, f = e5.theme, u2 = { top: a3, right: l, bottom: s, left: c2 };
  B.forEach(function(e6) {
    var a4 = u2[e6];
    if (!a4)
      return null;
    var l2 = "top" === e6 || "bottom" === e6, s2 = "top" === e6 || "left" === e6 ? "before" : "after", c3 = l2 ? i3 : n4, d2 = T(a4.format, c3);
    V(t4, p({}, a4, { axis: l2 ? "x" : "y", x: "right" === e6 ? r3 : 0, y: "bottom" === e6 ? o2 : 0, scale: c3, format: d2, length: l2 ? r3 : o2, ticksPosition: s2, theme: f }));
  });
};
var D = function(t4, e5) {
  var i3 = e5.width, n4 = e5.height, r3 = e5.scale, o2 = e5.axis, a3 = e5.values;
  P({ width: i3, height: n4, scale: r3, axis: o2, values: a3 }).forEach(function(e6) {
    t4.beginPath(), t4.moveTo(e6.x1, e6.y1), t4.lineTo(e6.x2, e6.y2), t4.stroke();
  });
};

// node_modules/@nivo/annotations/dist/nivo-annotations.es.js
var import_react2 = __toESM(require_react());
var import_filter = __toESM(require_filter());
var import_isNumber = __toESM(require_isNumber());
var import_omit = __toESM(require_omit());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
function g2() {
  return g2 = Object.assign ? Object.assign.bind() : function(t4) {
    for (var n4 = 1; n4 < arguments.length; n4++) {
      var i3 = arguments[n4];
      for (var o2 in i3)
        Object.prototype.hasOwnProperty.call(i3, o2) && (t4[o2] = i3[o2]);
    }
    return t4;
  }, g2.apply(this, arguments);
}
var k3 = { dotSize: 4, noteWidth: 120, noteTextOffset: 8, animate: true };
var W3 = function(n4) {
  var i3 = typeof n4;
  return (0, import_react2.isValidElement)(n4) || "string" === i3 || "function" === i3 || "object" === i3;
};
var v2 = function(t4) {
  var n4 = typeof t4;
  return "string" === n4 || "function" === n4;
};
var b2 = function(t4) {
  return "circle" === t4.type;
};
var w3 = function(t4) {
  return "dot" === t4.type;
};
var z2 = function(t4) {
  return "rect" === t4.type;
};
var P2 = function(t4) {
  var n4 = t4.data, i3 = t4.annotations, e5 = t4.getPosition, r3 = t4.getDimensions;
  return i3.reduce(function(t5, i4) {
    var s = i4.offset || 0;
    return [].concat(t5, (0, import_filter.default)(n4, i4.match).map(function(t6) {
      var n5 = e5(t6), o2 = r3(t6);
      return (b2(i4) || z2(i4)) && (o2.size = o2.size + 2 * s, o2.width = o2.width + 2 * s, o2.height = o2.height + 2 * s), g2({}, (0, import_omit.default)(i4, ["match", "offset"]), n5, o2, { size: i4.size || o2.size, datum: t6 });
    }));
  }, []);
};
var C2 = function(t4, n4, i3, o2) {
  var e5 = Math.atan2(o2 - n4, i3 - t4);
  return di(ai(e5));
};
var O2 = function(t4) {
  var n4, i3, o2 = t4.x, a3 = t4.y, r3 = t4.noteX, s = t4.noteY, h2 = t4.noteWidth, d2 = void 0 === h2 ? k3.noteWidth : h2, c2 = t4.noteTextOffset, f = void 0 === c2 ? k3.noteTextOffset : c2;
  if ((0, import_isNumber.default)(r3))
    n4 = o2 + r3;
  else {
    if (void 0 === r3.abs)
      throw new Error("noteX should be either a number or an object containing an 'abs' property");
    n4 = r3.abs;
  }
  if ((0, import_isNumber.default)(s))
    i3 = a3 + s;
  else {
    if (void 0 === s.abs)
      throw new Error("noteY should be either a number or an object containing an 'abs' property");
    i3 = s.abs;
  }
  var y = o2, x2 = a3, m2 = C2(o2, a3, n4, i3);
  if (b2(t4)) {
    var p3 = si(oi(m2), t4.size / 2);
    y += p3.x, x2 += p3.y;
  }
  if (z2(t4)) {
    var g3 = Math.round((m2 + 90) / 45) % 8;
    0 === g3 && (x2 -= t4.height / 2), 1 === g3 && (y += t4.width / 2, x2 -= t4.height / 2), 2 === g3 && (y += t4.width / 2), 3 === g3 && (y += t4.width / 2, x2 += t4.height / 2), 4 === g3 && (x2 += t4.height / 2), 5 === g3 && (y -= t4.width / 2, x2 += t4.height / 2), 6 === g3 && (y -= t4.width / 2), 7 === g3 && (y -= t4.width / 2, x2 -= t4.height / 2);
  }
  var W5 = n4, v3 = n4;
  return (m2 + 90) % 360 > 180 ? (W5 -= d2, v3 -= d2) : v3 += d2, { points: [[y, x2], [n4, i3], [v3, i3]], text: [W5, i3 - f], angle: m2 + 90 };
};
var S2 = function(t4) {
  var i3 = t4.data, o2 = t4.annotations, e5 = t4.getPosition, a3 = t4.getDimensions;
  return (0, import_react2.useMemo)(function() {
    return P2({ data: i3, annotations: o2, getPosition: e5, getDimensions: a3 });
  }, [i3, o2, e5, a3]);
};
var j2 = function(t4) {
  var i3 = t4.annotations;
  return (0, import_react2.useMemo)(function() {
    return i3.map(function(t5) {
      return g2({}, t5, { computed: O2(g2({}, t5)) });
    });
  }, [i3]);
};
var M = function(t4) {
  return (0, import_react2.useMemo)(function() {
    return O2(t4);
  }, [t4]);
};
var T2 = function(t4) {
  var n4 = t4.datum, o2 = t4.x, e5 = t4.y, r3 = t4.note, s = Et(), l = Zr(), u2 = l.animate, c2 = l.config, k4 = useSpring({ x: o2, y: e5, config: c2, immediate: !u2 });
  return "function" == typeof r3 ? (0, import_react2.createElement)(r3, { x: o2, y: e5, datum: n4 }) : (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.text.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.text, { x: k4.x, y: k4.y, style: g2({}, s.annotations.text, { strokeLinejoin: "round", strokeWidth: 2 * s.annotations.text.outlineWidth, stroke: s.annotations.text.outlineColor }), children: r3 }), (0, import_jsx_runtime2.jsx)(animated.text, { x: k4.x, y: k4.y, style: (0, import_omit.default)(s.annotations.text, ["outlineWidth", "outlineColor"]), children: r3 })] });
};
var E = function(t4) {
  var i3 = t4.points, o2 = t4.isOutline, e5 = void 0 !== o2 && o2, a3 = Et(), r3 = (0, import_react2.useMemo)(function() {
    var t5 = i3[0];
    return i3.slice(1).reduce(function(t6, n4) {
      return t6 + " L" + n4[0] + "," + n4[1];
    }, "M" + t5[0] + "," + t5[1]);
  }, [i3]), s = $r(r3);
  if (e5 && a3.annotations.link.outlineWidth <= 0)
    return null;
  var l = g2({}, a3.annotations.link);
  return e5 && (l.strokeLinecap = "square", l.strokeWidth = a3.annotations.link.strokeWidth + 2 * a3.annotations.link.outlineWidth, l.stroke = a3.annotations.link.outlineColor, l.opacity = a3.annotations.link.outlineOpacity), (0, import_jsx_runtime2.jsx)(animated.path, { fill: "none", d: s, style: l });
};
var I = function(t4) {
  var n4 = t4.x, i3 = t4.y, o2 = t4.size, e5 = Et(), a3 = Zr(), r3 = a3.animate, s = a3.config, l = useSpring({ x: n4, y: i3, radius: o2 / 2, config: s, immediate: !r3 });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [e5.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.circle, { cx: l.x, cy: l.y, r: l.radius, style: g2({}, e5.annotations.outline, { fill: "none", strokeWidth: e5.annotations.outline.strokeWidth + 2 * e5.annotations.outline.outlineWidth, stroke: e5.annotations.outline.outlineColor, opacity: e5.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.circle, { cx: l.x, cy: l.y, r: l.radius, style: e5.annotations.outline })] });
};
var D2 = function(t4) {
  var n4 = t4.x, i3 = t4.y, o2 = t4.size, e5 = void 0 === o2 ? k3.dotSize : o2, a3 = Et(), r3 = Zr(), s = r3.animate, l = r3.config, u2 = useSpring({ x: n4, y: i3, radius: e5 / 2, config: l, immediate: !s });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [a3.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.circle, { cx: u2.x, cy: u2.y, r: u2.radius, style: g2({}, a3.annotations.outline, { fill: "none", strokeWidth: 2 * a3.annotations.outline.outlineWidth, stroke: a3.annotations.outline.outlineColor, opacity: a3.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.circle, { cx: u2.x, cy: u2.y, r: u2.radius, style: a3.annotations.symbol })] });
};
var L2 = function(t4) {
  var n4 = t4.x, i3 = t4.y, o2 = t4.width, e5 = t4.height, a3 = t4.borderRadius, r3 = void 0 === a3 ? 6 : a3, s = Et(), l = Zr(), u2 = l.animate, c2 = l.config, k4 = useSpring({ x: n4 - o2 / 2, y: i3 - e5 / 2, width: o2, height: e5, config: c2, immediate: !u2 });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.rect, { x: k4.x, y: k4.y, rx: r3, ry: r3, width: k4.width, height: k4.height, style: g2({}, s.annotations.outline, { fill: "none", strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth, stroke: s.annotations.outline.outlineColor, opacity: s.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.rect, { x: k4.x, y: k4.y, rx: r3, ry: r3, width: k4.width, height: k4.height, style: s.annotations.outline })] });
};
var R = function(t4) {
  var n4 = t4.datum, i3 = t4.x, o2 = t4.y, e5 = t4.note, a3 = M(t4);
  if (!W3(e5))
    throw new Error("note should be a valid react element");
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [(0, import_jsx_runtime2.jsx)(E, { points: a3.points, isOutline: true }), b2(t4) && (0, import_jsx_runtime2.jsx)(I, { x: i3, y: o2, size: t4.size }), w3(t4) && (0, import_jsx_runtime2.jsx)(D2, { x: i3, y: o2, size: t4.size }), z2(t4) && (0, import_jsx_runtime2.jsx)(L2, { x: i3, y: o2, width: t4.width, height: t4.height, borderRadius: t4.borderRadius }), (0, import_jsx_runtime2.jsx)(E, { points: a3.points }), (0, import_jsx_runtime2.jsx)(T2, { datum: n4, x: a3.text[0], y: a3.text[1], note: e5 })] });
};
var q = function(t4, n4) {
  n4.forEach(function(n5, i3) {
    var o2 = n5[0], e5 = n5[1];
    0 === i3 ? t4.moveTo(o2, e5) : t4.lineTo(o2, e5);
  });
};
var J2 = function(t4, n4) {
  var i3 = n4.annotations, o2 = n4.theme;
  0 !== i3.length && (t4.save(), i3.forEach(function(n5) {
    if (!v2(n5.note))
      throw new Error("note is invalid for canvas implementation");
    o2.annotations.link.outlineWidth > 0 && (t4.lineCap = "square", t4.strokeStyle = o2.annotations.link.outlineColor, t4.lineWidth = o2.annotations.link.strokeWidth + 2 * o2.annotations.link.outlineWidth, t4.beginPath(), q(t4, n5.computed.points), t4.stroke(), t4.lineCap = "butt"), b2(n5) && o2.annotations.outline.outlineWidth > 0 && (t4.strokeStyle = o2.annotations.outline.outlineColor, t4.lineWidth = o2.annotations.outline.strokeWidth + 2 * o2.annotations.outline.outlineWidth, t4.beginPath(), t4.arc(n5.x, n5.y, n5.size / 2, 0, 2 * Math.PI), t4.stroke()), w3(n5) && o2.annotations.symbol.outlineWidth > 0 && (t4.strokeStyle = o2.annotations.symbol.outlineColor, t4.lineWidth = 2 * o2.annotations.symbol.outlineWidth, t4.beginPath(), t4.arc(n5.x, n5.y, n5.size / 2, 0, 2 * Math.PI), t4.stroke()), z2(n5) && o2.annotations.outline.outlineWidth > 0 && (t4.strokeStyle = o2.annotations.outline.outlineColor, t4.lineWidth = o2.annotations.outline.strokeWidth + 2 * o2.annotations.outline.outlineWidth, t4.beginPath(), t4.rect(n5.x - n5.width / 2, n5.y - n5.height / 2, n5.width, n5.height), t4.stroke()), t4.strokeStyle = o2.annotations.link.stroke, t4.lineWidth = o2.annotations.link.strokeWidth, t4.beginPath(), q(t4, n5.computed.points), t4.stroke(), b2(n5) && (t4.strokeStyle = o2.annotations.outline.stroke, t4.lineWidth = o2.annotations.outline.strokeWidth, t4.beginPath(), t4.arc(n5.x, n5.y, n5.size / 2, 0, 2 * Math.PI), t4.stroke()), w3(n5) && (t4.fillStyle = o2.annotations.symbol.fill, t4.beginPath(), t4.arc(n5.x, n5.y, n5.size / 2, 0, 2 * Math.PI), t4.fill()), z2(n5) && (t4.strokeStyle = o2.annotations.outline.stroke, t4.lineWidth = o2.annotations.outline.strokeWidth, t4.beginPath(), t4.rect(n5.x - n5.width / 2, n5.y - n5.height / 2, n5.width, n5.height), t4.stroke()), "function" == typeof n5.note ? n5.note(t4, { datum: n5.datum, x: n5.computed.text[0], y: n5.computed.text[1], theme: o2 }) : (t4.font = o2.annotations.text.fontSize + "px " + o2.annotations.text.fontFamily, t4.textAlign = "left", t4.textBaseline = "alphabetic", t4.fillStyle = o2.annotations.text.fill, t4.strokeStyle = o2.annotations.text.outlineColor, t4.lineWidth = 2 * o2.annotations.text.outlineWidth, o2.annotations.text.outlineWidth > 0 && (t4.lineJoin = "round", t4.strokeText(n5.note, n5.computed.text[0], n5.computed.text[1]), t4.lineJoin = "miter"), t4.fillText(n5.note, n5.computed.text[0], n5.computed.text[1]));
  }), t4.restore());
};

// node_modules/@nivo/bar/dist/nivo-bar.es.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_react3 = __toESM(require_react());
var import_uniqBy2 = __toESM(require_uniqBy());
function z3() {
  return z3 = Object.assign ? Object.assign.bind() : function(e5) {
    for (var a3 = 1; a3 < arguments.length; a3++) {
      var i3 = arguments[a3];
      for (var t4 in i3)
        Object.prototype.hasOwnProperty.call(i3, t4) && (e5[t4] = i3[t4]);
    }
    return e5;
  }, z3.apply(this, arguments);
}
function K2(e5, a3) {
  if (null == e5)
    return {};
  var i3, t4, n4 = {}, r3 = Object.keys(e5);
  for (t4 = 0; t4 < r3.length; t4++)
    i3 = r3[t4], a3.indexOf(i3) >= 0 || (n4[i3] = e5[i3]);
  return n4;
}
var N;
var J3 = function(e5) {
  var a3 = e5.bars, i3 = e5.annotations, t4 = S2({ data: a3, annotations: i3, getPosition: function(e6) {
    return { x: e6.x + e6.width / 2, y: e6.y + e6.height / 2 };
  }, getDimensions: function(e6) {
    var a4 = e6.height, i4 = e6.width;
    return { width: i4, height: a4, size: Math.max(i4, a4) };
  } });
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: t4.map(function(e6, a4) {
    return (0, import_jsx_runtime3.jsx)(R, z3({}, e6), a4);
  }) });
};
var Q2 = function(e5) {
  var a3 = e5.width, i3 = e5.height, t4 = e5.legends, n4 = e5.toggleSerie;
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: t4.map(function(e6, t5) {
    var r3, l = e6[0], o2 = e6[1];
    return (0, import_jsx_runtime3.jsx)(X, z3({}, l, { containerWidth: a3, containerHeight: i3, data: null != (r3 = l.data) ? r3 : o2, toggleSerie: l.toggleSerie && "keys" === l.dataFrom ? n4 : void 0 }), t5);
  }) });
};
var U = ["data"];
var Z = function(e5) {
  var a3, i3 = e5.bar, t4 = i3.data, n4 = K2(i3, U), r3 = e5.style, l = r3.borderColor, o2 = r3.color, u2 = r3.height, s = r3.labelColor, h2 = r3.labelOpacity, g3 = r3.labelX, v3 = r3.labelY, f = r3.transform, m2 = r3.width, p3 = e5.borderRadius, x2 = e5.borderWidth, y = e5.label, S3 = e5.shouldRenderLabel, k4 = e5.isInteractive, L3 = e5.onClick, w4 = e5.onMouseEnter, C3 = e5.onMouseLeave, B3 = e5.tooltip, I3 = e5.isFocusable, T4 = e5.ariaLabel, R3 = e5.ariaLabelledBy, H3 = e5.ariaDescribedBy, F = Et(), Y3 = k(), D3 = Y3.showTooltipFromEvent, O3 = Y3.showTooltipAt, G = Y3.hideTooltip, A2 = (0, import_react3.useMemo)(function() {
    return function() {
      return (0, import_react3.createElement)(B3, z3({}, n4, t4));
    };
  }, [B3, n4, t4]), j3 = (0, import_react3.useCallback)(function(e6) {
    null == L3 || L3(z3({ color: n4.color }, t4), e6);
  }, [n4, t4, L3]), q3 = (0, import_react3.useCallback)(function(e6) {
    return D3(A2(), e6);
  }, [D3, A2]), N2 = (0, import_react3.useCallback)(function(e6) {
    null == w4 || w4(t4, e6), D3(A2(), e6);
  }, [t4, w4, D3, A2]), J4 = (0, import_react3.useCallback)(function(e6) {
    null == C3 || C3(t4, e6), G();
  }, [t4, G, C3]), Q3 = (0, import_react3.useCallback)(function() {
    O3(A2(), [n4.absX + n4.width / 2, n4.absY]);
  }, [O3, A2, n4]), Z2 = (0, import_react3.useCallback)(function() {
    G();
  }, [G]);
  return (0, import_jsx_runtime3.jsxs)(animated.g, { transform: f, children: [(0, import_jsx_runtime3.jsx)(animated.rect, { width: to(m2, function(e6) {
    return Math.max(e6, 0);
  }), height: to(u2, function(e6) {
    return Math.max(e6, 0);
  }), rx: p3, ry: p3, fill: null != (a3 = t4.fill) ? a3 : o2, strokeWidth: x2, stroke: l, focusable: I3, tabIndex: I3 ? 0 : void 0, "aria-label": T4 ? T4(t4) : void 0, "aria-labelledby": R3 ? R3(t4) : void 0, "aria-describedby": H3 ? H3(t4) : void 0, onMouseEnter: k4 ? N2 : void 0, onMouseMove: k4 ? q3 : void 0, onMouseLeave: k4 ? J4 : void 0, onClick: k4 ? j3 : void 0, onFocus: k4 && I3 ? Q3 : void 0, onBlur: k4 && I3 ? Z2 : void 0 }), S3 && (0, import_jsx_runtime3.jsx)(animated.text, { x: g3, y: v3, textAnchor: "middle", dominantBaseline: "central", fillOpacity: h2, style: z3({}, F.labels.text, { pointerEvents: "none", fill: s }), children: y })] });
};
var $ = ["color", "label"];
var _2 = function(e5) {
  var a3 = e5.color, i3 = e5.label, t4 = K2(e5, $);
  return (0, import_jsx_runtime3.jsx)(w, { id: i3, value: t4.formattedValue, enableChip: true, color: a3 });
};
var ee = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", reverse: false, minValue: "auto", maxValue: "auto", valueScale: { type: "linear" }, indexScale: { type: "band", round: true }, padding: 0.1, innerPadding: 0, axisBottom: {}, axisLeft: {}, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { from: "theme", theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: _2, tooltipLabel: function(e5) {
  return e5.id + " - " + e5.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], markers: [] };
var ae = z3({}, ee, { layers: ["grid", "axes", "bars", "markers", "legends", "annotations"], barComponent: Z, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false });
var ie = z3({}, ee, { layers: ["grid", "axes", "bars", "legends", "annotations"], pixelRatio: "undefined" != typeof window && null != (N = window.devicePixelRatio) ? N : 1 });
var te = function(e5, a3, i3, t4, n4, r3) {
  return cn(t4, { all: e5.map(a3), min: 0, max: 0 }, n4, r3).padding(i3);
};
var ne = function(e5, a3) {
  return e5.map(function(e6) {
    return z3({}, a3.reduce(function(e7, a4) {
      return e7[a4] = null, e7;
    }, {}), e6);
  });
};
var re = function(e5) {
  return Object.keys(e5).reduce(function(a3, i3) {
    return e5[i3] && (a3[i3] = e5[i3]), a3;
  }, {});
};
var le = function(e5) {
  return [e5, Number(e5)];
};
var oe = ["layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var de = function(e5, a3) {
  return e5 > a3;
};
var ue = function(e5, a3) {
  return e5 < a3;
};
var ce = function(e5, a3) {
  return Array.from(" ".repeat(a3 - e5), function(a4, i3) {
    return e5 + i3;
  });
};
var se = function(e5) {
  return de(e5, 0) ? 0 : e5;
};
var he = function(e5, a3, i3, t4) {
  var n4 = e5.data, r3 = e5.formatValue, l = e5.getColor, o2 = e5.getIndex, d2 = e5.getTooltipLabel, u2 = e5.innerPadding, c2 = void 0 === u2 ? 0 : u2, s = e5.keys, h2 = e5.xScale, b3 = e5.yScale, g3 = e5.margin, v3 = i3 ? ue : de, f = n4.map(re), m2 = [];
  return s.forEach(function(e6, i4) {
    return ce(0, h2.domain().length).forEach(function(u3) {
      var s2, p3, x2, y = le(n4[u3][e6]), S3 = y[0], k4 = y[1], L3 = o2(n4[u3]), w4 = (null != (s2 = h2(L3)) ? s2 : 0) + a3 * i4 + c2 * i4, C3 = v3(p3 = k4, 0) ? null != (x2 = b3(p3)) ? x2 : 0 : t4, V3 = function(e7, a4) {
        var i5;
        return v3(e7, 0) ? t4 - a4 : (null != (i5 = b3(e7)) ? i5 : 0) - t4;
      }(k4, C3), W5 = { id: e6, value: null === S3 ? S3 : k4, formattedValue: r3(k4), hidden: false, index: u3, indexValue: L3, data: f[u3] };
      m2.push({ key: e6 + "." + W5.indexValue, index: m2.length, data: W5, x: w4, y: C3, absX: g3.left + w4, absY: g3.top + C3, width: a3, height: V3, color: l(W5), label: d2(W5) });
    });
  }), m2;
};
var be = function(e5, a3, i3, t4) {
  var n4 = e5.data, r3 = e5.formatValue, l = e5.getIndex, o2 = e5.getColor, d2 = e5.getTooltipLabel, u2 = e5.keys, c2 = e5.innerPadding, s = void 0 === c2 ? 0 : c2, h2 = e5.xScale, b3 = e5.yScale, g3 = e5.margin, v3 = i3 ? ue : de, f = n4.map(re), m2 = [];
  return u2.forEach(function(e6, i4) {
    return ce(0, b3.domain().length).forEach(function(u3) {
      var c3, p3, x2, y = le(n4[u3][e6]), S3 = y[0], k4 = y[1], L3 = l(n4[u3]), w4 = v3(p3 = k4, 0) ? t4 : null != (x2 = h2(p3)) ? x2 : 0, C3 = (null != (c3 = b3(L3)) ? c3 : 0) + a3 * i4 + s * i4, V3 = function(e7, a4) {
        var i5;
        return v3(e7, 0) ? (null != (i5 = h2(e7)) ? i5 : 0) - t4 : t4 - a4;
      }(k4, w4), W5 = { id: e6, value: null === S3 ? S3 : k4, formattedValue: r3(k4), hidden: false, index: u3, indexValue: L3, data: f[u3] };
      m2.push({ key: e6 + "." + W5.indexValue, index: m2.length, data: W5, x: w4, y: C3, absX: g3.left + w4, absY: g3.top + C3, width: V3, height: a3, color: o2(W5), label: d2(W5) });
    });
  }), m2;
};
var ge = function(e5) {
  var a3, i3, t4 = e5.layout, n4 = e5.minValue, r3 = e5.maxValue, l = e5.reverse, o2 = e5.width, d2 = e5.height, u2 = e5.padding, c2 = void 0 === u2 ? 0 : u2, s = e5.innerPadding, h2 = void 0 === s ? 0 : s, b3 = e5.valueScale, g3 = e5.indexScale, v3 = e5.hiddenIds, f = void 0 === v3 ? [] : v3, m2 = K2(e5, oe), p3 = m2.keys.filter(function(e6) {
    return !f.includes(e6);
  }), x2 = ne(m2.data, p3), y = "vertical" === t4 ? ["y", "x", o2] : ["x", "y", d2], S3 = y[0], k4 = y[1], L3 = y[2], w4 = te(x2, m2.getIndex, c2, g3, L3, k4), C3 = z3({ max: r3, min: n4, reverse: l }, b3), V3 = "auto" === C3.min ? se : function(e6) {
    return e6;
  }, W5 = x2.reduce(function(e6, a4) {
    return [].concat(e6, p3.map(function(e7) {
      return a4[e7];
    }));
  }, []).filter(Boolean), M3 = V3(Math.min.apply(Math, W5)), B3 = (i3 = Math.max.apply(Math, W5), isFinite(i3) ? i3 : 0), I3 = cn(C3, { all: W5, min: M3, max: B3 }, "x" === S3 ? o2 : d2, S3), T4 = "vertical" === t4 ? [w4, I3] : [I3, w4], R3 = T4[0], H3 = T4[1], P3 = (w4.bandwidth() - h2 * (p3.length - 1)) / p3.length, E2 = [z3({}, m2, { data: x2, keys: p3, innerPadding: h2, xScale: R3, yScale: H3 }), P3, C3.reverse, null != (a3 = I3(0)) ? a3 : 0];
  return { xScale: R3, yScale: H3, bars: P3 > 0 ? "vertical" === t4 ? he.apply(void 0, E2) : be.apply(void 0, E2) : [] };
};
var ve = ["data", "layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var fe = function e4(a3) {
  var i3;
  return a3.some(Array.isArray) ? e4((i3 = []).concat.apply(i3, a3)) : a3;
};
var me = function(e5, a3, i3) {
  var t4 = e5.formatValue, n4 = e5.getColor, r3 = e5.getIndex, l = e5.getTooltipLabel, o2 = e5.innerPadding, d2 = e5.stackedData, u2 = e5.xScale, c2 = e5.yScale, s = e5.margin, h2 = [];
  return d2.forEach(function(e6) {
    return u2.domain().forEach(function(d3, b3) {
      var g3, v3, f = e6[b3], m2 = null != (g3 = u2(r3(f.data))) ? g3 : 0, p3 = (null != (v3 = function(e7) {
        return c2(e7[i3 ? 0 : 1]);
      }(f)) ? v3 : 0) + 0.5 * o2, x2 = function(e7, a4) {
        var t5;
        return (null != (t5 = c2(e7[i3 ? 1 : 0])) ? t5 : 0) - a4;
      }(f, p3) - o2, y = le(f.data[e6.key]), S3 = y[0], k4 = y[1], L3 = { id: e6.key, value: null === S3 ? S3 : k4, formattedValue: t4(k4), hidden: false, index: b3, indexValue: d3, data: re(f.data) };
      h2.push({ key: e6.key + "." + d3, index: h2.length, data: L3, x: m2, y: p3, absX: s.left + m2, absY: s.top + p3, width: a3, height: x2, color: n4(L3), label: l(L3) });
    });
  }), h2;
};
var pe = function(e5, a3, i3) {
  var t4 = e5.formatValue, n4 = e5.getColor, r3 = e5.getIndex, l = e5.getTooltipLabel, o2 = e5.innerPadding, d2 = e5.stackedData, u2 = e5.xScale, c2 = e5.yScale, s = e5.margin, h2 = [];
  return d2.forEach(function(e6) {
    return c2.domain().forEach(function(d3, b3) {
      var g3, v3, f = e6[b3], m2 = null != (g3 = c2(r3(f.data))) ? g3 : 0, p3 = (null != (v3 = function(e7) {
        return u2(e7[i3 ? 1 : 0]);
      }(f)) ? v3 : 0) + 0.5 * o2, x2 = function(e7, a4) {
        var t5;
        return (null != (t5 = u2(e7[i3 ? 0 : 1])) ? t5 : 0) - a4;
      }(f, p3) - o2, y = le(f.data[e6.key]), S3 = y[0], k4 = y[1], L3 = { id: e6.key, value: null === S3 ? S3 : k4, formattedValue: t4(k4), hidden: false, index: b3, indexValue: d3, data: re(f.data) };
      h2.push({ key: e6.key + "." + d3, index: h2.length, data: L3, x: p3, y: m2, absX: s.left + p3, absY: s.top + m2, width: x2, height: a3, color: n4(L3), label: l(L3) });
    });
  }), h2;
};
var xe = function(e5) {
  var a3, i3 = e5.data, t4 = e5.layout, n4 = e5.minValue, r3 = e5.maxValue, l = e5.reverse, o2 = e5.width, d2 = e5.height, u2 = e5.padding, c2 = void 0 === u2 ? 0 : u2, s = e5.valueScale, h2 = e5.indexScale, b3 = e5.hiddenIds, g3 = void 0 === b3 ? [] : b3, v3 = K2(e5, ve), f = v3.keys.filter(function(e6) {
    return !g3.includes(e6);
  }), m2 = stack_default().keys(f).offset(diverging_default)(ne(i3, f)), p3 = "vertical" === t4 ? ["y", "x", o2] : ["x", "y", d2], x2 = p3[0], y = p3[1], S3 = p3[2], k4 = te(i3, v3.getIndex, c2, h2, S3, y), L3 = z3({ max: r3, min: n4, reverse: l }, s), w4 = (a3 = fe(m2), "log" === s.type ? a3.filter(function(e6) {
    return 0 !== e6;
  }) : a3), C3 = Math.min.apply(Math, w4), V3 = Math.max.apply(Math, w4), W5 = cn(L3, { all: w4, min: C3, max: V3 }, "x" === x2 ? o2 : d2, x2), M3 = "vertical" === t4 ? [k4, W5] : [W5, k4], B3 = M3[0], I3 = M3[1], T4 = v3.innerPadding > 0 ? v3.innerPadding : 0, R3 = k4.bandwidth(), H3 = [z3({}, v3, { innerPadding: T4, stackedData: m2, xScale: B3, yScale: I3 }), R3, L3.reverse];
  return { xScale: B3, yScale: I3, bars: R3 > 0 ? "vertical" === t4 ? me.apply(void 0, H3) : pe.apply(void 0, H3) : [] };
};
var ye = function(e5) {
  var a3 = e5.bars, i3 = e5.direction, t4 = e5.from, n4 = e5.groupMode, r3 = e5.layout, l = e5.legendLabel, o2 = e5.reverse, d2 = Ii(null != l ? l : "indexes" === t4 ? "indexValue" : "id");
  return "indexes" === t4 ? function(e6, a4, i4) {
    var t5 = (0, import_uniqBy2.default)(e6.map(function(e7) {
      var a5, t6;
      return { id: null != (a5 = e7.data.indexValue) ? a5 : "", label: i4(e7.data), hidden: e7.data.hidden, color: null != (t6 = e7.color) ? t6 : "#000" };
    }), function(e7) {
      return e7.id;
    });
    return "horizontal" === a4 && t5.reverse(), t5;
  }(a3, r3, d2) : function(e6, a4, i4, t5, n5, r4) {
    var l2 = (0, import_uniqBy2.default)(e6.map(function(e7) {
      var a5;
      return { id: e7.data.id, label: r4(e7.data), hidden: e7.data.hidden, color: null != (a5 = e7.color) ? a5 : "#000" };
    }), function(e7) {
      return e7.id;
    });
    return ("vertical" === a4 && "stacked" === t5 && "column" === i4 && true !== n5 || "horizontal" === a4 && "stacked" === t5 && true === n5) && l2.reverse(), l2;
  }(a3, r3, i3, n4, o2, d2);
};
var Se = function(e5) {
  var a3 = e5.indexBy, i3 = void 0 === a3 ? ee.indexBy : a3, t4 = e5.keys, n4 = void 0 === t4 ? ee.keys : t4, r3 = e5.label, l = void 0 === r3 ? ee.label : r3, o2 = e5.tooltipLabel, d2 = void 0 === o2 ? ee.tooltipLabel : o2, u2 = e5.valueFormat, c2 = e5.colors, s = void 0 === c2 ? ee.colors : c2, h2 = e5.colorBy, g3 = void 0 === h2 ? ee.colorBy : h2, m2 = e5.borderColor, p3 = void 0 === m2 ? ee.borderColor : m2, x2 = e5.labelTextColor, y = void 0 === x2 ? ee.labelTextColor : x2, S3 = e5.groupMode, k4 = void 0 === S3 ? ee.groupMode : S3, L3 = e5.layout, w4 = void 0 === L3 ? ee.layout : L3, C3 = e5.reverse, W5 = void 0 === C3 ? ee.reverse : C3, I3 = e5.data, T4 = e5.minValue, R3 = void 0 === T4 ? ee.minValue : T4, H3 = e5.maxValue, P3 = void 0 === H3 ? ee.maxValue : H3, E2 = e5.margin, F = e5.width, X4 = e5.height, Y3 = e5.padding, G = void 0 === Y3 ? ee.padding : Y3, A2 = e5.innerPadding, j3 = void 0 === A2 ? ee.innerPadding : A2, q3 = e5.valueScale, K3 = void 0 === q3 ? ee.valueScale : q3, N2 = e5.indexScale, J4 = void 0 === N2 ? ee.indexScale : N2, Q3 = e5.initialHiddenIds, U2 = void 0 === Q3 ? ee.initialHiddenIds : Q3, Z2 = e5.enableLabel, $2 = void 0 === Z2 ? ee.enableLabel : Z2, _3 = e5.labelSkipWidth, ae2 = void 0 === _3 ? ee.labelSkipWidth : _3, ie2 = e5.labelSkipHeight, te2 = void 0 === ie2 ? ee.labelSkipHeight : ie2, ne2 = e5.legends, re2 = void 0 === ne2 ? ee.legends : ne2, le2 = e5.legendLabel, oe2 = (0, import_react3.useState)(null != U2 ? U2 : []), de2 = oe2[0], ue2 = oe2[1], ce2 = (0, import_react3.useCallback)(function(e6) {
    ue2(function(a4) {
      return a4.indexOf(e6) > -1 ? a4.filter(function(a5) {
        return a5 !== e6;
      }) : [].concat(a4, [e6]);
    });
  }, []), se2 = Di(i3), he2 = Di(l), be2 = Di(d2), ve2 = Dt(u2), fe2 = Et(), me2 = pr(s, g3), pe2 = We(p3, fe2), Se2 = We(y, fe2), ke2 = ("grouped" === k4 ? ge : xe)({ layout: w4, reverse: W5, data: I3, getIndex: se2, keys: n4, minValue: R3, maxValue: P3, width: F, height: X4, getColor: me2, padding: G, innerPadding: j3, valueScale: K3, indexScale: J4, hiddenIds: de2, formatValue: ve2, getTooltipLabel: be2, margin: E2 }), Le2 = ke2.bars, we2 = ke2.xScale, Ce2 = ke2.yScale, Ve2 = (0, import_react3.useMemo)(function() {
    return Le2.filter(function(e6) {
      return null !== e6.data.value;
    }).map(function(e6, a4) {
      return z3({}, e6, { index: a4 });
    });
  }, [Le2]), We3 = (0, import_react3.useCallback)(function(e6) {
    var a4 = e6.width, i4 = e6.height;
    return !!$2 && (!(ae2 > 0 && a4 < ae2) && !(te2 > 0 && i4 < te2));
  }, [$2, ae2, te2]), Me2 = (0, import_react3.useMemo)(function() {
    return n4.map(function(e6) {
      var a4 = Le2.find(function(a5) {
        return a5.data.id === e6;
      });
      return z3({}, a4, { data: z3({ id: e6 }, null == a4 ? void 0 : a4.data, { hidden: de2.includes(e6) }) });
    });
  }, [de2, n4, Le2]), Be2 = (0, import_react3.useMemo)(function() {
    return re2.map(function(e6) {
      return [e6, ye({ bars: "keys" === e6.dataFrom ? Me2 : Le2, direction: e6.direction, from: e6.dataFrom, groupMode: k4, layout: w4, legendLabel: le2, reverse: W5 })];
    });
  }, [re2, Me2, Le2, k4, w4, le2, W5]);
  return { bars: Le2, barsWithValue: Ve2, xScale: we2, yScale: Ce2, getIndex: se2, getLabel: he2, getTooltipLabel: be2, formatValue: ve2, getColor: me2, getBorderColor: pe2, getLabelColor: Se2, shouldRenderBarLabel: We3, hiddenIds: de2, toggleSerie: ce2, legendsWithData: Be2 };
};
var ke = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var Le = function(i3) {
  var t4 = i3.data, n4 = i3.indexBy, r3 = i3.keys, l = i3.margin, o2 = i3.width, u2 = i3.height, c2 = i3.groupMode, s = i3.layout, h2 = i3.reverse, b3 = i3.minValue, g3 = i3.maxValue, v3 = i3.valueScale, f = i3.indexScale, m2 = i3.padding, L3 = i3.innerPadding, w4 = i3.axisTop, C3 = i3.axisRight, M3 = i3.axisBottom, B3 = void 0 === M3 ? ae.axisBottom : M3, T4 = i3.axisLeft, R3 = void 0 === T4 ? ae.axisLeft : T4, H3 = i3.enableGridX, P3 = void 0 === H3 ? ae.enableGridX : H3, E2 = i3.enableGridY, X4 = void 0 === E2 ? ae.enableGridY : E2, Y3 = i3.gridXValues, D3 = i3.gridYValues, O3 = i3.layers, G = void 0 === O3 ? ae.layers : O3, A2 = i3.barComponent, j3 = void 0 === A2 ? ae.barComponent : A2, q3 = i3.enableLabel, K3 = void 0 === q3 ? ae.enableLabel : q3, N2 = i3.label, U2 = i3.labelSkipWidth, Z2 = void 0 === U2 ? ae.labelSkipWidth : U2, $2 = i3.labelSkipHeight, _3 = void 0 === $2 ? ae.labelSkipHeight : $2, ee2 = i3.labelTextColor, ie2 = i3.markers, te2 = void 0 === ie2 ? ae.markers : ie2, ne2 = i3.colorBy, re2 = i3.colors, le2 = i3.defs, oe2 = void 0 === le2 ? ae.defs : le2, de2 = i3.fill, ue2 = void 0 === de2 ? ae.fill : de2, ce2 = i3.borderRadius, se2 = void 0 === ce2 ? ae.borderRadius : ce2, he2 = i3.borderWidth, be2 = void 0 === he2 ? ae.borderWidth : he2, ge2 = i3.borderColor, ve2 = i3.annotations, fe2 = void 0 === ve2 ? ae.annotations : ve2, me2 = i3.legendLabel, pe2 = i3.tooltipLabel, xe2 = i3.valueFormat, ye2 = i3.isInteractive, ke2 = void 0 === ye2 ? ae.isInteractive : ye2, Le2 = i3.tooltip, we2 = void 0 === Le2 ? ae.tooltip : Le2, Ce2 = i3.onClick, Ve2 = i3.onMouseEnter, We3 = i3.onMouseLeave, Me2 = i3.legends, Be2 = i3.role, Ie2 = void 0 === Be2 ? ae.role : Be2, Te = i3.ariaLabel, Re = i3.ariaLabelledBy, He = i3.ariaDescribedBy, Pe = i3.isFocusable, Ee = void 0 === Pe ? ae.isFocusable : Pe, Fe = i3.barAriaLabel, Xe = i3.barAriaLabelledBy, Ye = i3.barAriaDescribedBy, De = i3.initialHiddenIds, Oe = Zr(), Ge = Oe.animate, Ae = Oe.config, je = Bt(o2, u2, l), qe = je.outerWidth, ze = je.outerHeight, Ke = je.margin, Ne = je.innerWidth, Je = je.innerHeight, Qe = Se({ indexBy: n4, label: N2, tooltipLabel: pe2, valueFormat: xe2, colors: re2, colorBy: ne2, borderColor: ge2, labelTextColor: ee2, groupMode: c2, layout: s, reverse: h2, data: t4, keys: r3, minValue: b3, maxValue: g3, margin: Ke, width: Ne, height: Je, padding: m2, innerPadding: L3, valueScale: v3, indexScale: f, enableLabel: K3, labelSkipWidth: Z2, labelSkipHeight: _3, legends: Me2, legendLabel: me2, initialHiddenIds: De }), Ue = Qe.bars, Ze = Qe.barsWithValue, $e = Qe.xScale, _e = Qe.yScale, ea = Qe.getLabel, aa = Qe.getTooltipLabel, ia = Qe.getBorderColor, ta = Qe.getLabelColor, na = Qe.shouldRenderBarLabel, ra = Qe.toggleSerie, la = Qe.legendsWithData, oa = useTransition(Ze, { keys: function(e5) {
    return e5.key;
  }, from: function(e5) {
    return z3({ borderColor: ia(e5), color: e5.color, height: 0, labelColor: ta(e5), labelOpacity: 0, labelX: e5.width / 2, labelY: e5.height / 2, transform: "translate(" + e5.x + ", " + (e5.y + e5.height) + ")", width: e5.width }, "vertical" === s ? {} : { height: e5.height, transform: "translate(" + e5.x + ", " + e5.y + ")", width: 0 });
  }, enter: function(e5) {
    return { borderColor: ia(e5), color: e5.color, height: e5.height, labelColor: ta(e5), labelOpacity: 1, labelX: e5.width / 2, labelY: e5.height / 2, transform: "translate(" + e5.x + ", " + e5.y + ")", width: e5.width };
  }, update: function(e5) {
    return { borderColor: ia(e5), color: e5.color, height: e5.height, labelColor: ta(e5), labelOpacity: 1, labelX: e5.width / 2, labelY: e5.height / 2, transform: "translate(" + e5.x + ", " + e5.y + ")", width: e5.width };
  }, leave: function(e5) {
    return z3({ borderColor: ia(e5), color: e5.color, height: 0, labelColor: ta(e5), labelOpacity: 0, labelX: e5.width / 2, labelY: 0, transform: "translate(" + e5.x + ", " + (e5.y + e5.height) + ")", width: e5.width }, "vertical" === s ? {} : { labelX: 0, labelY: e5.height / 2, height: e5.height, transform: "translate(" + e5.x + ", " + e5.y + ")", width: 0 });
  }, config: Ae, immediate: !Ge, initial: Ge ? void 0 : null }), da = (0, import_react3.useMemo)(function() {
    return { borderRadius: se2, borderWidth: be2, enableLabel: K3, isInteractive: ke2, labelSkipWidth: Z2, labelSkipHeight: _3, onClick: Ce2, onMouseEnter: Ve2, onMouseLeave: We3, getTooltipLabel: aa, tooltip: we2, isFocusable: Ee, ariaLabel: Fe, ariaLabelledBy: Xe, ariaDescribedBy: Ye };
  }, [se2, be2, K3, aa, ke2, _3, Z2, Ce2, Ve2, We3, we2, Ee, Fe, Xe, Ye]), ua = Vi(oe2, Ue, ue2, { dataKey: "data", targetKey: "data.fill" }), ca = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null };
  G.includes("annotations") && (ca.annotations = (0, import_jsx_runtime3.jsx)(J3, { bars: Ue, annotations: fe2 }, "annotations")), G.includes("axes") && (ca.axes = (0, import_jsx_runtime3.jsx)(X3, { xScale: $e, yScale: _e, width: Ne, height: Je, top: w4, right: C3, bottom: B3, left: R3 }, "axes")), G.includes("bars") && (ca.bars = (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: oa(function(e5, a3) {
    return (0, import_react3.createElement)(j3, z3({}, da, { bar: a3, style: e5, shouldRenderLabel: na(a3), label: ea(a3.data) }));
  }) }, "bars")), G.includes("grid") && (ca.grid = (0, import_jsx_runtime3.jsx)(z, { width: Ne, height: Je, xScale: P3 ? $e : null, yScale: X4 ? _e : null, xValues: Y3, yValues: D3 }, "grid")), G.includes("legends") && (ca.legends = (0, import_jsx_runtime3.jsx)(Q2, { width: Ne, height: Je, legends: la, toggleSerie: ra }, "legends")), G.includes("markers") && (ca.markers = (0, import_jsx_runtime3.jsx)(Pi, { markers: te2, width: Ne, height: Je, xScale: $e, yScale: _e }, "markers"));
  var sa = (0, import_react3.useMemo)(function() {
    return z3({}, da, { margin: Ke, width: o2, height: u2, innerWidth: Ne, innerHeight: Je, bars: Ue, legendData: la, enableLabel: K3, xScale: $e, yScale: _e, tooltip: we2, getTooltipLabel: aa, onClick: Ce2, onMouseEnter: Ve2, onMouseLeave: We3 });
  }, [da, Ke, o2, u2, Ne, Je, Ue, la, K3, $e, _e, we2, aa, Ce2, Ve2, We3]);
  return (0, import_jsx_runtime3.jsx)(Oi, { width: qe, height: ze, margin: Ke, defs: ua, role: Ie2, ariaLabel: Te, ariaLabelledBy: Re, ariaDescribedBy: He, isFocusable: Ee, children: G.map(function(e5, a3) {
    var i4;
    return "function" == typeof e5 ? (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: (0, import_react3.createElement)(e5, sa) }, a3) : null != (i4 = null == ca ? void 0 : ca[e5]) ? i4 : null;
  }) });
};
var we = function(e5) {
  var a3 = e5.isInteractive, i3 = void 0 === a3 ? ae.isInteractive : a3, t4 = e5.animate, n4 = void 0 === t4 ? ae.animate : t4, r3 = e5.motionConfig, l = void 0 === r3 ? ae.motionConfig : r3, o2 = e5.theme, u2 = e5.renderWrapper, c2 = K2(e5, ke);
  return (0, import_jsx_runtime3.jsx)(Ht, { animate: n4, isInteractive: i3, motionConfig: l, renderWrapper: u2, theme: o2, children: (0, import_jsx_runtime3.jsx)(Le, z3({ isInteractive: i3 }, c2)) });
};
var Ce = ["isInteractive", "renderWrapper", "theme"];
var Ve = function(e5, a3, i3, t4) {
  return e5.find(function(e6) {
    return Ui(e6.x + a3.left, e6.y + a3.top, e6.width, e6.height, i3, t4);
  });
};
var We2 = function(e5) {
  var a3 = e5.data, r3 = e5.indexBy, u2 = e5.keys, c2 = e5.margin, s = e5.width, g3 = e5.height, v3 = e5.groupMode, f = e5.layout, m2 = e5.reverse, p3 = e5.minValue, y = e5.maxValue, S3 = e5.valueScale, k4 = e5.indexScale, w4 = e5.padding, C3 = e5.innerPadding, B3 = e5.axisTop, I3 = e5.axisRight, T4 = e5.axisBottom, P3 = void 0 === T4 ? ie.axisBottom : T4, E2 = e5.axisLeft, F = void 0 === E2 ? ie.axisLeft : E2, Y3 = e5.enableGridX, D3 = void 0 === Y3 ? ie.enableGridX : Y3, O3 = e5.enableGridY, G = void 0 === O3 ? ie.enableGridY : O3, A2 = e5.gridXValues, j3 = e5.gridYValues, q3 = e5.layers, K3 = void 0 === q3 ? ie.layers : q3, N2 = e5.renderBar, J4 = void 0 === N2 ? function(e6, a4) {
    var i3 = a4.bar, t4 = i3.color, n4 = i3.height, r4 = i3.width, l = i3.x, o2 = i3.y, d2 = a4.borderColor, u3 = a4.borderRadius, c3 = a4.borderWidth, s2 = a4.label, h2 = a4.labelColor, b3 = a4.shouldRenderLabel;
    if (e6.fillStyle = t4, c3 > 0 && (e6.strokeStyle = d2, e6.lineWidth = c3), e6.beginPath(), u3 > 0) {
      var g4 = Math.min(u3, n4);
      e6.moveTo(l + g4, o2), e6.lineTo(l + r4 - g4, o2), e6.quadraticCurveTo(l + r4, o2, l + r4, o2 + g4), e6.lineTo(l + r4, o2 + n4 - g4), e6.quadraticCurveTo(l + r4, o2 + n4, l + r4 - g4, o2 + n4), e6.lineTo(l + g4, o2 + n4), e6.quadraticCurveTo(l, o2 + n4, l, o2 + n4 - g4), e6.lineTo(l, o2 + g4), e6.quadraticCurveTo(l, o2, l + g4, o2), e6.closePath();
    } else
      e6.rect(l, o2, r4, n4);
    e6.fill(), c3 > 0 && e6.stroke(), b3 && (e6.textBaseline = "middle", e6.textAlign = "center", e6.fillStyle = h2, e6.fillText(s2, l + r4 / 2, o2 + n4 / 2));
  } : N2, Q3 = e5.enableLabel, U2 = void 0 === Q3 ? ie.enableLabel : Q3, Z2 = e5.label, $2 = e5.labelSkipWidth, _3 = void 0 === $2 ? ie.labelSkipWidth : $2, ee2 = e5.labelSkipHeight, ae2 = void 0 === ee2 ? ie.labelSkipHeight : ee2, te2 = e5.labelTextColor, ne2 = e5.colorBy, re2 = e5.colors, le2 = e5.borderRadius, oe2 = void 0 === le2 ? ie.borderRadius : le2, de2 = e5.borderWidth, ue2 = void 0 === de2 ? ie.borderWidth : de2, ce2 = e5.borderColor, se2 = e5.annotations, he2 = void 0 === se2 ? ie.annotations : se2, be2 = e5.legendLabel, ge2 = e5.tooltipLabel, ve2 = e5.valueFormat, fe2 = e5.isInteractive, me2 = void 0 === fe2 ? ie.isInteractive : fe2, pe2 = e5.tooltip, xe2 = void 0 === pe2 ? ie.tooltip : pe2, ye2 = e5.onClick, ke2 = e5.onMouseEnter, Le2 = e5.onMouseLeave, we2 = e5.legends, Ce2 = e5.pixelRatio, We3 = void 0 === Ce2 ? ie.pixelRatio : Ce2, Me2 = e5.canvasRef, Be2 = (0, import_react3.useRef)(null), Ie2 = Et(), Te = Bt(s, g3, c2), Re = Te.margin, He = Te.innerWidth, Pe = Te.innerHeight, Ee = Te.outerWidth, Fe = Te.outerHeight, Xe = Se({ indexBy: r3, label: Z2, tooltipLabel: ge2, valueFormat: ve2, colors: re2, colorBy: ne2, borderColor: ce2, labelTextColor: te2, groupMode: v3, layout: f, reverse: m2, data: a3, keys: u2, minValue: p3, maxValue: y, margin: Re, width: He, height: Pe, padding: w4, innerPadding: C3, valueScale: S3, indexScale: k4, enableLabel: U2, labelSkipWidth: _3, labelSkipHeight: ae2, legends: we2, legendLabel: be2 }), Ye = Xe.bars, De = Xe.barsWithValue, Oe = Xe.xScale, Ge = Xe.yScale, Ae = Xe.getLabel, je = Xe.getTooltipLabel, qe = Xe.getBorderColor, ze = Xe.getLabelColor, Ke = Xe.shouldRenderBarLabel, Ne = Xe.legendsWithData, Je = k(), Qe = Je.showTooltipFromEvent, Ue = Je.hideTooltip, Ze = j2({ annotations: S2({ data: Ye, annotations: he2, getPosition: function(e6) {
    return { x: e6.x, y: e6.y };
  }, getDimensions: function(e6) {
    var a4 = e6.width, i3 = e6.height;
    return { width: a4, height: i3, size: Math.max(a4, i3) };
  } }) }), $e = (0, import_react3.useMemo)(function() {
    return { borderRadius: oe2, borderWidth: ue2, isInteractive: me2, isFocusable: false, labelSkipWidth: _3, labelSkipHeight: ae2, margin: Re, width: s, height: g3, innerWidth: He, innerHeight: Pe, bars: Ye, legendData: Ne, enableLabel: U2, xScale: Oe, yScale: Ge, tooltip: xe2, getTooltipLabel: je, onClick: ye2, onMouseEnter: ke2, onMouseLeave: Le2 };
  }, [oe2, ue2, me2, _3, ae2, Re, s, g3, He, Pe, Ye, Ne, U2, Oe, Ge, xe2, je, ye2, ke2, Le2]);
  (0, import_react3.useEffect)(function() {
    var e6, a4 = null == (e6 = Be2.current) ? void 0 : e6.getContext("2d");
    Be2.current && a4 && (Be2.current.width = Ee * We3, Be2.current.height = Fe * We3, a4.scale(We3, We3), a4.fillStyle = Ie2.background, a4.fillRect(0, 0, Ee, Fe), a4.translate(Re.left, Re.top), K3.forEach(function(e7) {
      "grid" === e7 ? "number" == typeof Ie2.grid.line.strokeWidth && Ie2.grid.line.strokeWidth > 0 && (a4.lineWidth = Ie2.grid.line.strokeWidth, a4.strokeStyle = Ie2.grid.line.stroke, D3 && D(a4, { width: s, height: g3, scale: Oe, axis: "x", values: A2 }), G && D(a4, { width: s, height: g3, scale: Ge, axis: "y", values: j3 })) : "axes" === e7 ? j(a4, { xScale: Oe, yScale: Ge, width: He, height: Pe, top: B3, right: I3, bottom: P3, left: F, theme: Ie2 }) : "bars" === e7 ? De.forEach(function(e8) {
        J4(a4, { bar: e8, borderColor: qe(e8), borderRadius: oe2, borderWidth: ue2, label: Ae(e8.data), labelColor: ze(e8), shouldRenderLabel: Ke(e8) });
      }) : "legends" === e7 ? Ne.forEach(function(e8) {
        var i3 = e8[0], t4 = e8[1];
        H(a4, z3({}, i3, { data: t4, containerWidth: He, containerHeight: Pe, theme: Ie2 }));
      }) : "annotations" === e7 ? J2(a4, { annotations: Ze, theme: Ie2 }) : "function" == typeof e7 && e7(a4, $e);
    }), a4.save());
  }, [P3, F, I3, B3, De, oe2, ue2, Ze, D3, G, qe, Ae, ze, A2, j3, v3, g3, Pe, He, $e, K3, f, Ne, Re.left, Re.top, Fe, Ee, We3, J4, Oe, Ge, m2, Ke, Ie2, s]);
  var _e = (0, import_react3.useCallback)(function(e6) {
    if (Ye && Be2.current) {
      var a4 = Xi(Be2.current, e6), i3 = a4[0], t4 = a4[1], n4 = Ve(Ye, Re, i3, t4);
      void 0 !== n4 ? (Qe((0, import_react3.createElement)(xe2, z3({}, n4.data, { color: n4.color, label: n4.label, value: Number(n4.data.value) })), e6), "mouseenter" === e6.type && (null == ke2 || ke2(n4.data, e6))) : Ue();
    }
  }, [Ue, Re, ke2, Ye, Qe, xe2]), ea = (0, import_react3.useCallback)(function(e6) {
    if (Ye && Be2.current) {
      Ue();
      var a4 = Xi(Be2.current, e6), i3 = a4[0], t4 = a4[1], n4 = Ve(Ye, Re, i3, t4);
      n4 && (null == Le2 || Le2(n4.data, e6));
    }
  }, [Ue, Re, Le2, Ye]), aa = (0, import_react3.useCallback)(function(e6) {
    if (Ye && Be2.current) {
      var a4 = Xi(Be2.current, e6), i3 = a4[0], t4 = a4[1], n4 = Ve(Ye, Re, i3, t4);
      void 0 !== n4 && (null == ye2 || ye2(z3({}, n4.data, { color: n4.color }), e6));
    }
  }, [Re, ye2, Ye]);
  return (0, import_jsx_runtime3.jsx)("canvas", { ref: function(e6) {
    Be2.current = e6, Me2 && "current" in Me2 && (Me2.current = e6);
  }, width: Ee * We3, height: Fe * We3, style: { width: Ee, height: Fe, cursor: me2 ? "auto" : "normal" }, onMouseEnter: me2 ? _e : void 0, onMouseMove: me2 ? _e : void 0, onMouseLeave: me2 ? ea : void 0, onClick: me2 ? aa : void 0 });
};
var Me = (0, import_react3.forwardRef)(function(e5, a3) {
  var i3 = e5.isInteractive, t4 = e5.renderWrapper, n4 = e5.theme, r3 = K2(e5, Ce);
  return (0, import_jsx_runtime3.jsx)(Ht, { isInteractive: i3, renderWrapper: t4, theme: n4, animate: false, children: (0, import_jsx_runtime3.jsx)(We2, z3({}, r3, { canvasRef: a3 })) });
});
var Be = function(e5) {
  return (0, import_jsx_runtime3.jsx)(Jt, { children: function(a3) {
    var i3 = a3.width, t4 = a3.height;
    return (0, import_jsx_runtime3.jsx)(we, z3({ width: i3, height: t4 }, e5));
  } });
};
var Ie = (0, import_react3.forwardRef)(function(e5, a3) {
  return (0, import_jsx_runtime3.jsx)(Jt, { children: function(i3) {
    var t4 = i3.width, n4 = i3.height;
    return (0, import_jsx_runtime3.jsx)(Me, z3({ width: t4, height: n4 }, e5, { ref: a3 }));
  } });
});
export {
  we as Bar,
  Me as BarCanvas,
  Z as BarItem,
  _2 as BarTooltip,
  Be as ResponsiveBar,
  Ie as ResponsiveBarCanvas,
  ie as canvasDefaultProps,
  ee as defaultProps,
  ae as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
